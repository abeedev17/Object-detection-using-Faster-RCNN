import glob
import pandas as pd
import xml.etree.ElementTree as ET
import csv

def xml_to_csv(path):
    xml_list = []
    for xml_file in glob.glob(path + '/*.xml'):
        tree = ET.parse(xml_file)
        root = tree.getroot()
        for member in root.findall('object'):
            try:
                value = (root.find('filename').text,
                     int(root.find('size').find('width').text),
                     int(root.find('size').find('height').text),
                     member.find('name').text,
                     int(member.find('bndbox').find('xmin').text),
                     int(member.find('bndbox').find('ymin').text),
                     int(member.find('bndbox').find('xmax').text),
                     int(member.find('bndbox').find('ymax').text)
                     )
                xml_list.append(value)
            except:
                pass
    column_name = ['filename', 'width', 'height', 'class', 'xmin', 'ymin', 'xmax', 'ymax']
    xml_df = pd.DataFrame(xml_list, columns=column_name)
    return xml_df
   
labels_df = xml_to_csv('xml_annot/')
labels_df.to_csv(('labels.csv'), index=None)


#with open("labels.csv","+") as file:
 #   reader = csv.reader(file)
  #  print(reader)
   # for row in list(reader)[14600:]:
    #    if row[1]<10 and row[4]<2:
     #       row = to_csv(row[0])
        



def to_csv():
    xml_list = []
    #for xml_file in glob.glob('2010_006711.jpg'):
    tree = ET.parse('xml_annot/2010_006711.xml')
    root = tree.getroot()
    for member in root.findall('object'):
        try:
            value = (root.find('filename').text,
                     int(root.find('size')[0].text),
                     int(root.find('size')[1].text),
                     member[0].text,
                     int(member[4][0].text),
                     int(member[4][1].text),
                     int(member[4][2].text),
                     int(member[4][3].text)
                     )
            xml_list.append(value)
        except:
            pass
        print(xml_list)

    for member in root.findall('object'):
        try:
            value = (root.find('filename').text,
                     int(root.find('size').find('width').text),
                     int(root.find('size').find('height').text),
                     member.find('name').text,
                     int(member.find('bndbox').find('xmin').text),
                     int(member.find('bndbox').find('ymin').text),
                     int(member.find('bndbox').find('xmax').text),
                     int(member.find('bndbox').find('ymax').text)
                     )
            xml_list.append(value)
        except:
            pass
        print(xml_list[1])

